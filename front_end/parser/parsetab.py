
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD_ASSIGN AND_ASSIGN AND_OP AUTO BOOLEAN BREAK CASE CHAR COMPLEX CONST CONSTANT CONTINUE DEC_OP DEFAULT DIV_ASSIGN DO DOUBLE ELLIPSIS ELSE ENUM EQ_OP EXTERN FLOAT FOR GE_OP GOTO IDENTIFIER IF IMAGINARY INC_OP INLINE INT LEFT_ASSIGN LEFT_OP LE_OP LONG MOD_ASSIGN MUL_ASSIGN NE_OP OR_ASSIGN OR_OP PTR_OP REGISTER RESTRICT RETURN RIGHT_ASSIGN RIGHT_OP SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TYPEDEF TYPEDEF_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit : external_declaration \n                            | translation_unit external_declarationexternal_declaration : function_definition\n                                | declaration function_definition : declaration_specifiers declarator declaration_list compound_statement\n                                | declaration_specifiers declarator compound_statementprimary_expression : IDENTIFIER\n                              | CONSTANT\n                              | STRING_LITERAL\n                              | '(' expression ')' postfix_expression : primary_expression\n                              | postfix_expression '[' expression ']'\n                              | postfix_expression '(' ')'\n                              | postfix_expression '(' argument_expression_list ')'\n                              | postfix_expression '.' IDENTIFIER\n                              | postfix_expression PTR_OP IDENTIFIER\n                              | postfix_expression INC_OP\n                              | postfix_expression DEC_OP\n                              | '(' type_name ')' '{' initializer_list '}' \n                              | '(' type_name ')' '{' initializer_list  ',' '}' \n                              argument_expression_list : assignment_expression\n                                    | argument_expression_list ',' assignment_expression unary_expression : postfix_expression\n                            | INC_OP unary_expression\n                            | DEC_OP unary_expression\n                            | unary_operator cast_expression\n                            | SIZEOF unary_expression\n                            | SIZEOF '(' type_name ')' unary_operator : '&'\n                          | '*'  \n                          | '+'  \n                          | '-'  \n                          | '~'  \n                          | '!' cast_expression : unary_expression\n                           | '(' type_name ')' cast_expression multiplicative_expression : cast_expression\n                                     | multiplicative_expression '*' cast_expression\n                                     | multiplicative_expression '/' cast_expression\n                                     | multiplicative_expression '%' cast_expression additive_expression : multiplicative_expression\n                               | additive_expression '+' multiplicative_expression\n                               | additive_expression '-' multiplicative_expression shift_expression : additive_expression\n                            | shift_expression LEFT_OP additive_expression\n                            | shift_expression RIGHT_OP additive_expression relational_expression : shift_expression\n                                 | relational_expression '<' shift_expression\n                                 | relational_expression '>' shift_expression\n                                 | relational_expression LE_OP shift_expression\n                                 | relational_expression GE_OP shift_expression equality_expression : relational_expression\n                               | equality_expression EQ_OP relational_expression\n                               | equality_expression NE_OP relational_expression and_expression : equality_expression\n                          | and_expression '&' equality_expression exclusive_or_expression : and_expression\n                                   | exclusive_or_expression '^' and_expression inclusive_or_expression : exclusive_or_expression\n                                   | inclusive_or_expression '|' exclusive_or_expression logical_and_expression : inclusive_or_expression\n                                  | logical_and_expression AND_OP inclusive_or_expression logical_or_expression : logical_and_expression\n                                 | logical_or_expression OR_OP logical_and_expression conditional_expression : logical_or_expression\n                                  | logical_or_expression '?' expression ':' conditional_expression assignment_expression : conditional_expression\n                                 | unary_expression assignment_operator assignment_expressionassignment_operator : '='\n                               | MUL_ASSIGN \n                               | DIV_ASSIGN \n                               | MOD_ASSIGN \n                               | ADD_ASSIGN \n                               | SUB_ASSIGN \n                               | LEFT_ASSIGN \n                               | RIGHT_ASSIGN \n                               | AND_ASSIGN \n                               | XOR_ASSIGN \n                               | OR_ASSIGN expression : assignment_expression\n                      | expression ',' assignment_expression constant_expression : conditional_expression declaration : declaration_specifiers ';' \n                       | declaration_specifiers init_declarator_list ';' declaration_specifiers : storage_class_specifier\n                                  | storage_class_specifier declaration_specifiers\n                                  | type_specifier\n                                  | type_specifier declaration_specifiers\n                                  | type_qualifier\n                                  | type_qualifier declaration_specifiers\n                                  | function_specifier\n                                  | function_specifier declaration_specifiersinit_declarator_list : init_declarator\n                                | init_declarator_list ',' init_declarator init_declarator : declarator\n                           | declarator '=' initializer storage_class_specifier : TYPEDEF\n                                   | EXTERN\n                                   | STATIC\n                                   | AUTO\n                                   | REGISTER type_specifier : VOID\n                          | CHAR\n                          | SHORT\n                          | INT\n                          | LONG\n                          | FLOAT\n                          | DOUBLE\n                          | SIGNED\n                          | UNSIGNED\n                          | BOOLEAN\n                          | COMPLEX\n                          | IMAGINARY\n                          | struct_or_union_specifier\n                          | enum_specifier\n                          | TYPEDEF_NAME struct_or_union_specifier : struct_or_union '{' struct_declaration_list '}'\n                                     | struct_or_union IDENTIFIER '{' struct_declaration_list '}'\n                                     | struct_or_union IDENTIFIER struct_or_union : STRUCT\n                           | UNION struct_declaration_list : struct_declaration\n                                   | struct_declaration_list struct_declaration struct_declaration : specifier_qualifier_list struct_declarator_list ';' specifier_qualifier_list : type_specifier\n                                    | type_specifier specifier_qualifier_list\n                                    | type_qualifier \n                                    | type_qualifier specifier_qualifier_liststruct_declarator_list : struct_declarator\n                                  | struct_declarator_list ',' struct_declaratorstruct_declarator : declarator\n                             | ':' constant_expression\n                             | declarator ':' constant_expression enum_specifier : ENUM '{' enumerator_list '}'\n                          | ENUM '{' enumerator_list  ',' '}' enum_specifier : ENUM IDENTIFIER '{' enumerator_list '}'\n                          | ENUM IDENTIFIER '{' enumerator_list  ',' '}' enum_specifier : ENUM IDENTIFIER enumerator_list : enumerator\n                           | enumerator_list ',' enumeratorenumerator : IDENTIFIER\n                      | IDENTIFIER '=' constant_expression function_specifier : INLINE type_qualifier : CONST\n                          | RESTRICT\n                          | VOLATILE declarator : direct_declarator\n                      | pointer direct_declarator direct_declarator : IDENTIFIER direct_declarator : '(' declarator ')' direct_declarator : direct_declarator '[' ']'\n                             | direct_declarator '[' type_qualifier_list ']' direct_declarator : direct_declarator '[' assignment_expression ']'\n                             | direct_declarator '[' type_qualifier_list assignment_expression ']' direct_declarator : direct_declarator '[' STATIC assignment_expression ']'\n                             | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'\n                             | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' direct_declarator : direct_declarator '[' '*' ']'\n                             | direct_declarator '[' type_qualifier_list '*' ']' direct_declarator : direct_declarator '(' ')'\n                             | direct_declarator '(' parameter_type_list ')'\n                             | direct_declarator '(' identifier_list ')'\n                             pointer : '*'\n                   | '*' pointer pointer : '*' type_qualifier_list\n                   | '*' type_qualifier_list pointer type_qualifier_list : type_qualifier\n                               | type_qualifier_list type_qualifier parameter_type_list : parameter_list\n                               | parameter_list ',' ELLIPSISparameter_list : parameter_declaration\n                          | parameter_list ',' parameter_declaration parameter_declaration : declaration_specifiers\n                                 | declaration_specifiers declarator\n                                 | declaration_specifiers abstract_declarator identifier_list : IDENTIFIER\n                           | identifier_list ',' IDENTIFIER type_name : specifier_qualifier_list\n                     | specifier_qualifier_list abstract_declarator abstract_declarator : pointer\n                               | direct_abstract_declarator\n                               | pointer direct_abstract_declarator direct_abstract_declarator : '(' abstract_declarator ')' direct_abstract_declarator : direct_abstract_declarator '[' ']'\n                                      | direct_abstract_declarator '[' assignment_expression ']' direct_abstract_declarator : '[' ']'\n                                      | '[' assignment_expression ']' \n                                      | '[' type_qualifier_list ']' \n                                      | '[' type_qualifier_list assignment_expression ']' \n                                      direct_abstract_declarator : direct_abstract_declarator '[' '*' ']'\n                                      direct_abstract_declarator : '[' '*' ']'\n                                      direct_abstract_declarator : direct_abstract_declarator '(' ')'\n                                      | direct_abstract_declarator '(' parameter_type_list ')'\n                                      direct_abstract_declarator : '(' ')'\n                                      | '(' parameter_type_list ')'\n                                      initializer : assignment_expressioninitializer : '{' initializer_list '}'\n                       | '{' initializer_list ',' '}' initializer_list : initializer\n                            | designation initializer\n                            | initializer_list ',' initializer \n                            | initializer_list ',' designation initializer designation : designator_list '=' designator_list : designator\n                           | designator_list designator designator : '[' constant_expression  ']'\n                      | '.' IDENTIFIER statement : labeled_statement\n                     | compound_statement\n                     | expression_statement\n                     | selection_statement\n                     | iteration_statement\n                     | jump_statement labeled_statement : IDENTIFIER ':' statement\n                             | CASE constant_expression ':' statement\n                             | DEFAULT ':' statement compound_statement : '{' '}'\n                              | '{' block_item_list '}' block_item_list : block_item\n                           | block_item_list block_item block_item : declaration\n                      | statement declaration_list : declaration\n                            | declaration_list declaration expression_statement : ';'\n                                | expression ';' selection_statement : IF '(' expression ')' statement\n                               | IF '(' expression ')' statement ELSE statement\n                               | SWITCH '(' expression ')' statement iteration_statement : WHILE '(' expression ')' statement\n                               | DO statement WHILE '(' expression ')' ';'\n                               | FOR '(' expression_statement expression_statement ')' statement\n                               | FOR '(' declaration expression_statement expression_statement ')' statement jump_statement : GOTO IDENTIFIER ';'\n                          | CONTINUE ';'\n                          | BREAK ';'\n                          | RETURN ';'\n                          | RETURN expression ';' "
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,53,55,57,58,60,61,62,65,66,82,83,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,167,226,227,232,238,240,241,242,244,248,251,252,253,255,260,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[10,10,-1,-3,-4,10,10,10,10,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,10,-83,-147,-149,-119,-138,10,-6,-223,10,-84,10,-148,-5,-224,-217,10,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-134,-218,-220,-226,10,-235,-236,-237,-152,-153,-158,-161,-162,10,10,-118,-135,-136,10,-214,-216,-234,-238,-154,-159,-155,10,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'EXTERN':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,53,55,57,58,60,61,62,65,66,82,83,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,167,226,227,232,238,240,241,242,244,248,251,252,253,255,260,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[11,11,-1,-3,-4,11,11,11,11,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,11,-83,-147,-149,-119,-138,11,-6,-223,11,-84,11,-148,-5,-224,-217,11,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-134,-218,-220,-226,11,-235,-236,-237,-152,-153,-158,-161,-162,11,11,-118,-135,-136,11,-214,-216,-234,-238,-154,-159,-155,11,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'STATIC':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,53,55,57,58,60,61,62,64,65,66,70,82,83,116,117,118,119,120,121,122,123,124,125,126,127,143,144,148,155,157,158,167,226,227,232,238,240,241,242,244,248,251,252,253,255,260,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[12,12,-1,-3,-4,12,12,12,12,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,12,-83,-147,-149,-119,-138,12,-6,-223,12,-84,146,12,-148,-167,-5,-224,-217,12,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,246,-160,-150,-168,-117,-134,-218,-220,-226,12,-235,-236,-237,-152,-153,-158,-161,-162,12,12,-118,-135,-136,12,-214,-216,-234,-238,-154,-159,-155,12,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'AUTO':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,53,55,57,58,60,61,62,65,66,82,83,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,167,226,227,232,238,240,241,242,244,248,251,252,253,255,260,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[13,13,-1,-3,-4,13,13,13,13,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,13,-83,-147,-149,-119,-138,13,-6,-223,13,-84,13,-148,-5,-224,-217,13,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-134,-218,-220,-226,13,-235,-236,-237,-152,-153,-158,-161,-162,13,13,-118,-135,-136,13,-214,-216,-234,-238,-154,-159,-155,13,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'REGISTER':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,53,55,57,58,60,61,62,65,66,82,83,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,167,226,227,232,238,240,241,242,244,248,251,252,253,255,260,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[14,14,-1,-3,-4,14,14,14,14,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,14,-83,-147,-149,-119,-138,14,-6,-223,14,-84,14,-148,-5,-224,-217,14,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-134,-218,-220,-226,14,-235,-236,-237,-152,-153,-158,-161,-162,14,14,-118,-135,-136,14,-214,-216,-234,-238,-154,-159,-155,14,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'VOID':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[15,15,-1,-3,-4,15,15,15,15,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,15,-83,-147,-149,15,-119,-138,15,-6,-223,15,-84,15,-148,15,-122,15,15,15,-5,-224,15,-217,15,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,15,-134,15,15,15,-218,-220,-226,15,-235,-236,-237,-152,-153,-158,-161,-162,15,15,-124,-118,-135,-136,15,-214,-216,-234,-238,-154,-159,-155,15,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'CHAR':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[16,16,-1,-3,-4,16,16,16,16,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,16,-83,-147,-149,16,-119,-138,16,-6,-223,16,-84,16,-148,16,-122,16,16,16,-5,-224,16,-217,16,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,16,-134,16,16,16,-218,-220,-226,16,-235,-236,-237,-152,-153,-158,-161,-162,16,16,-124,-118,-135,-136,16,-214,-216,-234,-238,-154,-159,-155,16,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'SHORT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[17,17,-1,-3,-4,17,17,17,17,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,17,-83,-147,-149,17,-119,-138,17,-6,-223,17,-84,17,-148,17,-122,17,17,17,-5,-224,17,-217,17,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,17,-134,17,17,17,-218,-220,-226,17,-235,-236,-237,-152,-153,-158,-161,-162,17,17,-124,-118,-135,-136,17,-214,-216,-234,-238,-154,-159,-155,17,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'INT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[18,18,-1,-3,-4,18,18,18,18,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,18,-83,-147,-149,18,-119,-138,18,-6,-223,18,-84,18,-148,18,-122,18,18,18,-5,-224,18,-217,18,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,18,-134,18,18,18,-218,-220,-226,18,-235,-236,-237,-152,-153,-158,-161,-162,18,18,-124,-118,-135,-136,18,-214,-216,-234,-238,-154,-159,-155,18,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'LONG':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[19,19,-1,-3,-4,19,19,19,19,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,19,-83,-147,-149,19,-119,-138,19,-6,-223,19,-84,19,-148,19,-122,19,19,19,-5,-224,19,-217,19,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,19,-134,19,19,19,-218,-220,-226,19,-235,-236,-237,-152,-153,-158,-161,-162,19,19,-124,-118,-135,-136,19,-214,-216,-234,-238,-154,-159,-155,19,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'FLOAT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[20,20,-1,-3,-4,20,20,20,20,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,20,-83,-147,-149,20,-119,-138,20,-6,-223,20,-84,20,-148,20,-122,20,20,20,-5,-224,20,-217,20,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,20,-134,20,20,20,-218,-220,-226,20,-235,-236,-237,-152,-153,-158,-161,-162,20,20,-124,-118,-135,-136,20,-214,-216,-234,-238,-154,-159,-155,20,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[21,21,-1,-3,-4,21,21,21,21,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,21,-83,-147,-149,21,-119,-138,21,-6,-223,21,-84,21,-148,21,-122,21,21,21,-5,-224,21,-217,21,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,21,-134,21,21,21,-218,-220,-226,21,-235,-236,-237,-152,-153,-158,-161,-162,21,21,-124,-118,-135,-136,21,-214,-216,-234,-238,-154,-159,-155,21,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'SIGNED':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[22,22,-1,-3,-4,22,22,22,22,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,22,-83,-147,-149,22,-119,-138,22,-6,-223,22,-84,22,-148,22,-122,22,22,22,-5,-224,22,-217,22,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,22,-134,22,22,22,-218,-220,-226,22,-235,-236,-237,-152,-153,-158,-161,-162,22,22,-124,-118,-135,-136,22,-214,-216,-234,-238,-154,-159,-155,22,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'UNSIGNED':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[23,23,-1,-3,-4,23,23,23,23,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,23,-83,-147,-149,23,-119,-138,23,-6,-223,23,-84,23,-148,23,-122,23,23,23,-5,-224,23,-217,23,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,23,-134,23,23,23,-218,-220,-226,23,-235,-236,-237,-152,-153,-158,-161,-162,23,23,-124,-118,-135,-136,23,-214,-216,-234,-238,-154,-159,-155,23,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'BOOLEAN':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[24,24,-1,-3,-4,24,24,24,24,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,24,-83,-147,-149,24,-119,-138,24,-6,-223,24,-84,24,-148,24,-122,24,24,24,-5,-224,24,-217,24,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,24,-134,24,24,24,-218,-220,-226,24,-235,-236,-237,-152,-153,-158,-161,-162,24,24,-124,-118,-135,-136,24,-214,-216,-234,-238,-154,-159,-155,24,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'COMPLEX':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[25,25,-1,-3,-4,25,25,25,25,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,25,-83,-147,-149,25,-119,-138,25,-6,-223,25,-84,25,-148,25,-122,25,25,25,-5,-224,25,-217,25,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,25,-134,25,25,25,-218,-220,-226,25,-235,-236,-237,-152,-153,-158,-161,-162,25,25,-124,-118,-135,-136,25,-214,-216,-234,-238,-154,-159,-155,25,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'IMAGINARY':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[26,26,-1,-3,-4,26,26,26,26,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,26,-83,-147,-149,26,-119,-138,26,-6,-223,26,-84,26,-148,26,-122,26,26,26,-5,-224,26,-217,26,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,26,-134,26,26,26,-218,-220,-226,26,-235,-236,-237,-152,-153,-158,-161,-162,26,26,-124,-118,-135,-136,26,-214,-216,-234,-238,-154,-159,-155,26,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'TYPEDEF_NAME':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[29,29,-1,-3,-4,29,29,29,29,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,29,-83,-147,-149,29,-119,-138,29,-6,-223,29,-84,29,-148,29,-122,29,29,29,-5,-224,29,-217,29,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,29,-134,29,29,29,-218,-220,-226,29,-235,-236,-237,-152,-153,-158,-161,-162,29,29,-124,-118,-135,-136,29,-214,-216,-234,-238,-154,-159,-155,29,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'CONST':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,47,52,53,55,57,58,60,61,62,64,65,66,69,70,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,144,146,148,155,157,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,250,251,252,253,255,260,261,262,266,267,270,295,313,315,323,324,325,327,328,335,341,345,359,366,367,383,384,385,397,400,401,402,],[30,30,-1,-3,-4,30,30,30,30,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,30,-83,-147,-149,30,30,-119,-138,30,-6,-223,30,-84,30,30,-148,30,-167,30,-122,30,30,30,-5,-224,30,-217,30,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,30,30,-160,-150,-168,-117,-123,30,-134,30,30,30,-218,-220,-226,30,-235,-236,-237,-152,-153,30,-158,-161,-162,30,30,30,-124,-118,-135,-136,30,-214,-216,-234,-238,-154,-159,-155,30,30,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'RESTRICT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,47,52,53,55,57,58,60,61,62,64,65,66,69,70,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,144,146,148,155,157,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,250,251,252,253,255,260,261,262,266,267,270,295,313,315,323,324,325,327,328,335,341,345,359,366,367,383,384,385,397,400,401,402,],[31,31,-1,-3,-4,31,31,31,31,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,31,-83,-147,-149,31,31,-119,-138,31,-6,-223,31,-84,31,31,-148,31,-167,31,-122,31,31,31,-5,-224,31,-217,31,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,31,31,-160,-150,-168,-117,-123,31,-134,31,31,31,-218,-220,-226,31,-235,-236,-237,-152,-153,31,-158,-161,-162,31,31,31,-124,-118,-135,-136,31,-214,-216,-234,-238,-154,-159,-155,31,31,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,47,52,53,55,57,58,60,61,62,64,65,66,69,70,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,144,146,148,155,157,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,250,251,252,253,255,260,261,262,266,267,270,295,313,315,323,324,325,327,328,335,341,345,359,366,367,383,384,385,397,400,401,402,],[32,32,-1,-3,-4,32,32,32,32,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,32,-83,-147,-149,32,32,-119,-138,32,-6,-223,32,-84,32,32,-148,32,-167,32,-122,32,32,32,-5,-224,32,-217,32,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,32,32,-160,-150,-168,-117,-123,32,-134,32,32,32,-218,-220,-226,32,-235,-236,-237,-152,-153,32,-158,-161,-162,32,32,32,-124,-118,-135,-136,32,-214,-216,-234,-238,-154,-159,-155,32,32,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'INLINE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,53,55,57,58,60,61,62,65,66,82,83,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,167,226,227,232,238,240,241,242,244,248,251,252,253,255,260,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[33,33,-1,-3,-4,33,33,33,33,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,33,-83,-147,-149,-119,-138,33,-6,-223,33,-84,33,-148,-5,-224,-217,33,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-134,-218,-220,-226,33,-235,-236,-237,-152,-153,-158,-161,-162,33,33,-118,-135,-136,33,-214,-216,-234,-238,-154,-159,-155,33,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'ENUM':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[35,35,-1,-3,-4,35,35,35,35,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,35,-83,-147,-149,35,-119,-138,35,-6,-223,35,-84,35,-148,35,-122,35,35,35,-5,-224,35,-217,35,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,35,-134,35,35,35,-218,-220,-226,35,-235,-236,-237,-152,-153,-158,-161,-162,35,35,-124,-118,-135,-136,35,-214,-216,-234,-238,-154,-159,-155,35,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'STRUCT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[36,36,-1,-3,-4,36,36,36,36,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,36,-83,-147,-149,36,-119,-138,36,-6,-223,36,-84,36,-148,36,-122,36,36,36,-5,-224,36,-217,36,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,36,-134,36,36,36,-218,-220,-226,36,-235,-236,-237,-152,-153,-158,-161,-162,36,36,-124,-118,-135,-136,36,-214,-216,-234,-238,-154,-159,-155,36,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'UNION':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,39,40,42,45,52,53,55,57,58,60,61,62,65,66,71,72,74,75,76,82,83,96,116,117,118,119,120,121,122,123,124,125,126,127,143,148,155,158,159,166,167,199,203,205,226,227,232,238,240,241,242,244,248,251,252,253,255,260,262,266,267,270,295,313,315,323,324,325,327,328,335,345,359,366,367,383,384,385,397,400,401,402,],[37,37,-1,-3,-4,37,37,37,37,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-2,37,-83,-147,-149,37,-119,-138,37,-6,-223,37,-84,37,-148,37,-122,37,37,37,-5,-224,37,-217,37,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-151,-160,-150,-117,-123,37,-134,37,37,37,-218,-220,-226,37,-235,-236,-237,-152,-153,-158,-161,-162,37,37,-124,-118,-135,-136,37,-214,-216,-234,-238,-154,-159,-155,37,-137,-215,-157,-156,-227,-229,-230,-232,-228,-231,-233,]),'$end':([1,2,3,4,38,40,58,62,82,116,226,],[0,-1,-3,-4,-2,-83,-6,-84,-5,-217,-218,]),';':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,42,44,45,48,49,50,51,53,55,56,61,62,66,81,84,85,87,88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,135,138,139,140,141,142,143,148,155,158,160,161,162,167,196,197,198,200,201,202,204,226,227,228,230,231,232,238,239,240,241,242,243,244,248,251,252,253,265,266,267,270,272,279,281,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,321,322,323,324,325,327,328,343,344,345,346,351,352,356,358,359,360,361,362,365,366,367,380,383,384,385,387,393,395,396,397,398,399,400,401,402,],[40,-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-95,-83,62,-147,-93,-149,-86,-88,-90,-92,-119,-138,40,121,-84,-148,-95,-96,-196,-67,-35,-65,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-217,121,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,232,121,240,241,242,-80,-94,-151,-160,-150,-117,262,-129,-131,-134,-17,-18,-24,-25,-26,-35,-27,-218,-220,121,-82,121,-226,121,323,-235,-236,-237,324,-152,-153,-158,-161,-162,-132,-118,-135,-136,-197,-68,-64,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-214,121,-216,-81,121,121,-234,-238,-154,-159,-155,-130,-133,-137,-198,-12,-14,-28,-36,-215,121,121,121,121,-157,-156,-66,-227,-229,-230,121,-19,121,401,-232,121,-20,-228,-231,-233,]),'IDENTIFIER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,43,46,47,48,49,50,51,53,54,55,56,59,61,62,63,64,65,68,69,70,73,74,75,80,86,91,92,93,95,96,100,101,102,103,104,105,116,117,118,119,120,121,122,123,124,125,126,127,129,135,137,140,144,146,147,154,156,157,158,163,164,165,167,168,169,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,254,258,260,261,263,264,266,267,270,271,273,275,291,313,314,315,321,322,323,324,334,341,342,345,348,350,353,355,357,359,360,361,362,363,365,370,383,384,385,387,394,395,397,398,400,401,402,],[45,-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,53,55,-120,-121,-83,45,45,-163,-86,-88,-90,-92,-119,79,-138,45,99,128,-84,45,99,152,-164,-165,-167,45,-125,-127,79,99,99,99,99,99,99,-29,-30,-31,-32,-33,-34,-217,128,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,99,128,239,99,99,99,-30,45,-166,-168,-117,99,-126,-128,-134,79,99,99,99,278,99,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,99,99,99,99,286,287,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-218,-220,128,128,-226,99,99,99,99,99,-235,-236,-237,99,-30,99,330,45,45,99,45,99,-118,-135,-136,79,99,-203,99,-214,128,-216,99,99,-234,-238,99,99,-30,-137,99,99,99,99,99,-215,128,128,128,99,99,-30,-227,-229,-230,128,99,128,-232,128,-228,-231,-233,]),'(':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,40,42,43,45,46,47,48,49,50,51,53,55,56,59,61,62,63,64,66,68,69,70,73,74,75,86,90,91,92,93,95,96,98,99,100,101,102,103,104,105,107,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,140,143,144,146,147,148,154,155,156,157,158,163,164,165,167,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,199,203,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,244,246,247,248,250,251,252,253,258,259,260,261,263,264,266,267,270,273,275,283,286,287,291,292,294,295,313,314,315,320,321,322,323,324,325,327,328,333,334,336,339,341,342,345,348,350,351,352,353,355,357,359,360,361,362,363,365,366,367,368,370,371,373,374,375,376,378,383,384,385,387,389,390,391,392,393,394,395,397,398,399,400,401,402,],[46,-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-83,65,46,-149,46,-163,-86,-88,-90,-92,-119,-138,46,96,96,-84,46,96,65,-164,-165,-167,46,-125,-127,96,193,199,199,203,205,96,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,-217,96,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,203,234,235,236,96,238,96,-151,96,96,-30,-160,260,-150,-166,-168,-117,203,-126,-128,-134,203,96,203,96,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,96,203,96,96,-17,-18,96,96,96,295,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,-218,-220,96,96,-226,96,96,96,96,96,-235,-236,-237,-152,96,-30,-153,96,-158,-161,-162,260,335,260,96,46,203,-118,-135,-136,96,-203,-13,-15,-16,203,-10,295,295,-214,96,-216,363,96,96,-234,-238,-154,-159,-155,335,96,-194,-186,96,-30,-137,96,203,-12,-14,96,203,96,-215,96,96,96,96,96,-157,-156,-184,-30,-192,-183,-195,-187,-188,-191,-227,-229,-230,96,-185,-190,-193,-189,-19,96,96,-232,96,-20,-228,-231,-233,]),'*':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,40,46,47,48,49,50,51,53,55,56,59,61,62,63,64,69,70,73,74,75,86,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,107,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,144,146,147,154,157,158,163,164,165,167,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,260,261,263,264,266,267,270,273,275,283,286,287,291,292,295,308,309,310,311,312,313,314,315,321,322,323,324,334,341,342,345,348,350,351,352,353,355,356,357,358,359,360,361,362,363,365,370,383,384,385,387,393,394,395,397,398,399,400,401,402,],[47,-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-83,47,47,-86,-88,-90,-92,-119,-138,47,101,101,-84,47,147,47,-167,47,-125,-127,101,-35,-23,101,101,101,-37,101,101,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,223,-217,101,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,101,101,101,247,101,-30,47,-168,-117,101,-126,-128,-134,101,101,101,101,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,101,101,101,101,-17,-18,-24,101,-25,-26,-35,101,-27,101,47,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-218,-220,101,101,-226,101,101,101,101,101,-235,-236,-237,101,-30,101,47,342,47,101,-118,-135,-136,101,-203,-13,-15,-16,101,-10,47,223,223,-38,-39,-40,-214,101,-216,101,101,-234,-238,370,101,-30,-137,101,101,-12,-14,101,101,-28,101,-36,-215,101,101,101,101,101,-30,-227,-229,-230,101,-19,101,101,-232,101,-20,-228,-231,-233,]),'[':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,42,45,47,48,49,50,51,53,55,66,68,69,70,74,75,86,90,98,99,107,108,128,143,148,154,155,156,157,158,164,165,167,174,175,196,197,208,244,248,251,252,253,258,259,260,266,267,270,273,276,278,283,286,287,292,294,295,325,327,328,333,336,339,345,349,351,352,357,366,367,368,371,373,374,375,376,378,389,390,391,392,393,394,399,],[-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,64,-149,-163,-86,-88,-90,-92,-119,-138,64,-164,-165,-167,-125,-127,176,192,-11,-7,-8,-9,-7,-151,-160,261,-150,-166,-168,-117,-126,-128,-134,176,-204,-17,-18,261,-152,-153,-158,-161,-162,261,334,261,-118,-135,-136,176,-205,-207,-13,-15,-16,-10,261,261,-154,-159,-155,334,-194,-186,-137,-206,-12,-14,176,-157,-156,-184,-192,-183,-195,-187,-188,-191,-185,-190,-193,-189,-19,176,-20,]),',':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,41,42,44,45,47,48,49,50,51,53,55,66,68,69,70,77,78,79,81,84,85,87,88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,128,131,141,142,143,148,150,151,152,153,154,155,156,157,158,160,161,162,167,170,171,172,196,197,198,200,201,202,204,207,230,243,244,248,251,252,253,256,257,258,259,265,266,267,268,269,270,272,274,279,280,281,282,283,284,285,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,317,318,319,325,327,328,330,332,333,336,339,343,344,345,346,347,351,352,356,358,366,367,368,371,373,374,375,376,378,379,380,381,382,386,389,390,391,392,393,399,],[-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-95,63,-147,-93,-149,-163,-86,-88,-90,-92,-119,-138,-148,-164,-165,-167,168,-139,-141,-95,-96,-196,-67,-35,-65,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-7,233,-80,-94,-151,-160,254,255,-176,-171,-173,-150,-166,-168,-117,263,-129,-131,-134,271,273,-199,-17,-18,-24,-25,-26,-35,-27,233,-82,233,-152,-153,-158,-161,-162,-174,-175,-180,-181,-132,-118,-135,-140,-142,-136,-197,-200,-68,233,-64,233,-13,353,-21,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-81,233,233,233,-154,-159,-155,-177,-172,-182,-194,-186,-130,-133,-137,-198,-201,-12,-14,-28,-36,-157,-156,-184,-192,-183,-195,-187,-188,-191,-202,-66,-22,394,233,-185,-190,-193,-189,-19,-20,]),')':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,42,45,47,48,49,50,51,53,55,65,66,67,68,69,70,74,75,87,88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,121,141,143,148,149,150,151,152,153,154,155,156,157,158,164,165,167,193,196,197,198,200,201,202,204,206,207,208,232,244,248,251,252,253,256,257,258,259,260,266,267,270,279,281,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,317,318,319,325,327,328,330,331,332,333,335,336,337,338,339,345,351,352,356,358,364,366,367,368,371,372,373,374,375,376,378,380,381,386,388,389,390,391,392,393,399,],[-85,-87,-89,-91,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-143,-147,-149,-163,-86,-88,-90,-92,-119,-138,148,-148,155,-164,-165,-167,-125,-127,-67,-35,-65,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-225,-80,-151,-160,252,253,-169,-176,-171,-173,-150,-166,-168,-117,-126,-128,-134,283,-17,-18,-24,-25,-26,-35,-27,291,292,-178,-226,-152,-153,-158,-161,-162,-174,-175,-180,-181,336,-118,-135,-136,-68,-64,-13,352,-21,-15,-16,354,355,356,-10,-179,-180,336,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-81,360,361,362,-154,-159,-155,-177,-170,-172,-182,371,-194,373,374,-186,-137,-12,-14,-28,-36,387,-157,-156,-184,-192,391,-183,-195,-187,-188,-191,-66,-22,396,398,-185,-190,-193,-189,-19,-20,]),':':([15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,42,45,53,55,66,73,74,75,87,88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,128,130,141,143,148,155,158,162,164,165,167,196,197,198,200,201,202,204,229,230,244,248,251,252,253,263,266,267,270,279,280,281,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,325,327,328,345,351,352,356,358,366,367,380,393,399,],[-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-144,-145,-146,-147,-149,-119,-138,-148,163,-125,-127,-67,-35,-65,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,228,231,-80,-151,-160,-150,-117,264,-126,-128,-134,-17,-18,-24,-25,-26,-35,-27,314,-82,-152,-153,-158,-161,-162,163,-118,-135,-136,-68,350,-64,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-81,-154,-159,-155,-137,-12,-14,-28,-36,-157,-156,-66,-19,-20,]),']':([30,31,32,64,70,87,88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,141,144,145,147,157,196,197,198,200,201,202,204,230,245,247,249,261,277,279,281,282,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,326,329,334,340,341,342,351,352,356,358,369,370,377,380,393,399,],[-144,-145,-146,143,-167,-67,-35,-65,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-80,244,248,251,-168,-17,-18,-24,-25,-26,-35,-27,-82,325,327,328,339,349,-68,-64,351,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-81,366,367,368,375,376,378,-12,-14,-28,-36,389,390,392,-66,-19,-20,]),'INC_OP':([30,31,32,40,59,61,62,64,70,86,90,91,92,93,95,96,98,99,100,101,102,103,104,105,107,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,283,286,287,291,292,313,314,315,321,322,323,324,334,341,342,348,350,351,352,353,355,357,359,360,361,362,363,365,370,383,384,385,387,393,394,395,397,398,399,400,401,402,],[-144,-145,-146,-83,91,91,-84,91,-167,91,196,91,91,91,91,91,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,-217,91,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,91,91,91,91,91,-30,-168,91,91,91,91,91,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,91,91,91,91,-17,-18,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-218,-220,91,91,-226,91,91,91,91,91,-235,-236,-237,91,-30,91,91,91,91,-203,-13,-15,-16,91,-10,-214,91,-216,91,91,-234,-238,91,91,-30,91,91,-12,-14,91,91,91,-215,91,91,91,91,91,-30,-227,-229,-230,91,-19,91,91,-232,91,-20,-228,-231,-233,]),'DEC_OP':([30,31,32,40,59,61,62,64,70,86,90,91,92,93,95,96,98,99,100,101,102,103,104,105,107,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,283,286,287,291,292,313,314,315,321,322,323,324,334,341,342,348,350,351,352,353,355,357,359,360,361,362,363,365,370,383,384,385,387,393,394,395,397,398,399,400,401,402,],[-144,-145,-146,-83,92,92,-84,92,-167,92,197,92,92,92,92,92,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,-217,92,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,92,92,92,92,92,-30,-168,92,92,92,92,92,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,92,92,92,92,-17,-18,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-218,-220,92,92,-226,92,92,92,92,92,-235,-236,-237,92,-30,92,92,92,92,-203,-13,-15,-16,92,-10,-214,92,-216,92,92,-234,-238,92,92,-30,92,92,-12,-14,92,92,92,-215,92,92,92,92,92,-30,-227,-229,-230,92,-19,92,92,-232,92,-20,-228,-231,-233,]),'SIZEOF':([30,31,32,40,59,61,62,64,70,86,91,92,93,95,96,100,101,102,103,104,105,116,117,118,119,120,121,122,123,124,125,126,127,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,291,313,314,315,321,322,323,324,334,341,342,348,350,353,355,357,359,360,361,362,363,365,370,383,384,385,387,394,395,397,398,400,401,402,],[-144,-145,-146,-83,95,95,-84,95,-167,95,95,95,95,95,95,-29,-30,-31,-32,-33,-34,-217,95,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,95,95,95,95,95,-30,-168,95,95,95,95,95,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-218,-220,95,95,-226,95,95,95,95,95,-235,-236,-237,95,-30,95,95,95,95,-203,95,-214,95,-216,95,95,-234,-238,95,95,-30,95,95,95,95,95,-215,95,95,95,95,95,-30,-227,-229,-230,95,95,95,-232,95,-228,-231,-233,]),'&':([30,31,32,40,59,61,62,64,70,86,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,283,286,287,291,292,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,323,324,334,341,342,348,350,351,352,353,355,356,357,358,359,360,361,362,363,365,370,383,384,385,387,393,394,395,397,398,399,400,401,402,],[-144,-145,-146,-83,100,100,-84,100,-167,100,-35,-23,100,100,100,-37,100,100,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,212,-55,-52,-47,-44,-41,-217,100,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,100,100,100,100,100,-30,-168,100,100,100,100,100,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,100,100,100,100,-17,-18,-24,100,-25,-26,-35,100,-27,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-218,-220,100,100,-226,100,100,100,100,100,-235,-236,-237,100,-30,100,100,100,100,-203,-13,-15,-16,100,-10,212,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-214,100,-216,100,100,-234,-238,100,100,-30,100,100,-12,-14,100,100,-28,100,-36,-215,100,100,100,100,100,-30,-227,-229,-230,100,-19,100,100,-232,100,-20,-228,-231,-233,]),'+':([30,31,32,40,59,61,62,64,70,86,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,283,286,287,291,292,306,307,308,309,310,311,312,313,314,315,321,322,323,324,334,341,342,348,350,351,352,353,355,356,357,358,359,360,361,362,363,365,370,383,384,385,387,393,394,395,397,398,399,400,401,402,],[-144,-145,-146,-83,102,102,-84,102,-167,102,-35,-23,102,102,102,-37,102,102,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,221,-41,-217,102,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,102,102,102,102,102,-30,-168,102,102,102,102,102,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,102,102,102,102,-17,-18,-24,102,-25,-26,-35,102,-27,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-218,-220,102,102,-226,102,102,102,102,102,-235,-236,-237,102,-30,102,102,102,102,-203,-13,-15,-16,102,-10,221,221,-42,-43,-38,-39,-40,-214,102,-216,102,102,-234,-238,102,102,-30,102,102,-12,-14,102,102,-28,102,-36,-215,102,102,102,102,102,-30,-227,-229,-230,102,-19,102,102,-232,102,-20,-228,-231,-233,]),'-':([30,31,32,40,59,61,62,64,70,86,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,107,108,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,283,286,287,291,292,306,307,308,309,310,311,312,313,314,315,321,322,323,324,334,341,342,348,350,351,352,353,355,356,357,358,359,360,361,362,363,365,370,383,384,385,387,393,394,395,397,398,399,400,401,402,],[-144,-145,-146,-83,103,103,-84,103,-167,103,-35,-23,103,103,103,-37,103,103,-11,-7,-29,-30,-31,-32,-33,-34,-8,-9,222,-41,-217,103,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-7,103,103,103,103,103,-30,-168,103,103,103,103,103,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,103,103,103,103,-17,-18,-24,103,-25,-26,-35,103,-27,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-218,-220,103,103,-226,103,103,103,103,103,-235,-236,-237,103,-30,103,103,103,103,-203,-13,-15,-16,103,-10,222,222,-42,-43,-38,-39,-40,-214,103,-216,103,103,-234,-238,103,103,-30,103,103,-12,-14,103,103,-28,103,-36,-215,103,103,103,103,103,-30,-227,-229,-230,103,-19,103,103,-232,103,-20,-228,-231,-233,]),'~':([30,31,32,40,59,61,62,64,70,86,91,92,93,95,96,100,101,102,103,104,105,116,117,118,119,120,121,122,123,124,125,126,127,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,291,313,314,315,321,322,323,324,334,341,342,348,350,353,355,357,359,360,361,362,363,365,370,383,384,385,387,394,395,397,398,400,401,402,],[-144,-145,-146,-83,104,104,-84,104,-167,104,104,104,104,104,104,-29,-30,-31,-32,-33,-34,-217,104,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,104,104,104,104,104,-30,-168,104,104,104,104,104,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-218,-220,104,104,-226,104,104,104,104,104,-235,-236,-237,104,-30,104,104,104,104,-203,104,-214,104,-216,104,104,-234,-238,104,104,-30,104,104,104,104,104,-215,104,104,104,104,104,-30,-227,-229,-230,104,104,104,-232,104,-228,-231,-233,]),'!':([30,31,32,40,59,61,62,64,70,86,91,92,93,95,96,100,101,102,103,104,105,116,117,118,119,120,121,122,123,124,125,126,127,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,291,313,314,315,321,322,323,324,334,341,342,348,350,353,355,357,359,360,361,362,363,365,370,383,384,385,387,394,395,397,398,400,401,402,],[-144,-145,-146,-83,105,105,-84,105,-167,105,105,105,105,105,105,-29,-30,-31,-32,-33,-34,-217,105,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,105,105,105,105,105,-30,-168,105,105,105,105,105,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-218,-220,105,105,-226,105,105,105,105,105,-235,-236,-237,105,-30,105,105,105,105,-203,105,-214,105,-216,105,105,-234,-238,105,105,-30,105,105,105,105,105,-215,105,105,105,105,105,-30,-227,-229,-230,105,105,105,-232,105,-228,-231,-233,]),'CONSTANT':([30,31,32,40,59,61,62,64,70,86,91,92,93,95,96,100,101,102,103,104,105,116,117,118,119,120,121,122,123,124,125,126,127,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,291,313,314,315,321,322,323,324,334,341,342,348,350,353,355,357,359,360,361,362,363,365,370,383,384,385,387,394,395,397,398,400,401,402,],[-144,-145,-146,-83,107,107,-84,107,-167,107,107,107,107,107,107,-29,-30,-31,-32,-33,-34,-217,107,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,107,107,107,107,107,-30,-168,107,107,107,107,107,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-218,-220,107,107,-226,107,107,107,107,107,-235,-236,-237,107,-30,107,107,107,107,-203,107,-214,107,-216,107,107,-234,-238,107,107,-30,107,107,107,107,107,-215,107,107,107,107,107,-30,-227,-229,-230,107,107,107,-232,107,-228,-231,-233,]),'STRING_LITERAL':([30,31,32,40,59,61,62,64,70,86,91,92,93,95,96,100,101,102,103,104,105,116,117,118,119,120,121,122,123,124,125,126,127,129,135,140,144,146,147,157,163,169,173,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,238,240,241,242,246,247,250,261,264,273,275,291,313,314,315,321,322,323,324,334,341,342,348,350,353,355,357,359,360,361,362,363,365,370,383,384,385,387,394,395,397,398,400,401,402,],[-144,-145,-146,-83,108,108,-84,108,-167,108,108,108,108,108,108,-29,-30,-31,-32,-33,-34,-217,108,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,108,108,108,108,108,-30,-168,108,108,108,108,108,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-218,-220,108,108,-226,108,108,108,108,108,-235,-236,-237,108,-30,108,108,108,108,-203,108,-214,108,-216,108,108,-234,-238,108,108,-30,108,108,108,108,108,-215,108,108,108,108,108,-30,-227,-229,-230,108,108,108,-232,108,-228,-231,-233,]),'{':([34,35,36,37,39,40,42,45,53,55,57,59,60,61,62,66,83,86,116,117,118,119,120,121,122,123,124,125,126,127,135,143,148,155,173,226,227,228,231,232,240,241,242,244,248,251,252,253,273,275,291,313,314,315,323,324,325,327,328,348,354,355,356,357,359,360,361,362,366,367,383,384,385,387,394,395,397,398,400,401,402,],[52,54,-120,-121,61,-83,-147,-149,76,80,61,86,-223,61,-84,-148,-224,86,-217,61,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,61,-151,-160,-150,86,-218,-220,61,61,-226,-235,-236,-237,-152,-153,-158,-161,-162,86,-203,357,-214,61,-216,-234,-238,-154,-159,-155,86,357,357,357,86,-215,61,61,61,-157,-156,-227,-229,-230,61,86,61,-232,61,-228,-231,-233,]),'=':([39,42,45,66,79,81,88,90,98,99,107,108,128,143,148,155,174,175,196,197,198,200,201,202,204,244,248,251,252,253,276,278,283,286,287,292,325,327,328,349,351,352,356,358,366,367,393,399,],[59,-147,-149,-148,169,59,179,-23,-11,-7,-8,-9,-7,-151,-160,-150,275,-204,-17,-18,-24,-25,-26,-35,-27,-152,-153,-158,-161,-162,-205,-207,-13,-15,-16,-10,-154,-159,-155,-206,-12,-14,-28,-36,-157,-156,-19,-20,]),'}':([40,61,62,71,72,77,78,79,85,87,88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,159,166,168,170,171,172,196,197,198,200,201,202,204,226,227,230,232,240,241,242,262,268,269,271,272,273,274,279,281,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,323,324,346,347,351,352,356,358,359,379,380,382,383,384,385,393,394,397,399,400,401,402,],[-83,116,-84,158,-122,167,-139,-141,-196,-67,-35,-65,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-217,226,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,-123,266,267,270,272,-199,-17,-18,-24,-25,-26,-35,-27,-218,-220,-82,-226,-235,-236,-237,-124,-140,-142,345,-197,346,-200,-68,-64,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-214,-216,-234,-238,-198,-201,-12,-14,-28,-36,-215,-202,-66,393,-227,-229,-230,-19,399,-232,-20,-228,-231,-233,]),'CASE':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,129,-84,-217,129,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,129,-218,-220,129,129,-226,-235,-236,-237,-214,129,-216,-234,-238,-215,129,129,129,-227,-229,-230,129,129,-232,129,-228,-231,-233,]),'DEFAULT':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,130,-84,-217,130,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,130,-218,-220,130,130,-226,-235,-236,-237,-214,130,-216,-234,-238,-215,130,130,130,-227,-229,-230,130,130,-232,130,-228,-231,-233,]),'IF':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,132,-84,-217,132,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,132,-218,-220,132,132,-226,-235,-236,-237,-214,132,-216,-234,-238,-215,132,132,132,-227,-229,-230,132,132,-232,132,-228,-231,-233,]),'SWITCH':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,133,-84,-217,133,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,133,-218,-220,133,133,-226,-235,-236,-237,-214,133,-216,-234,-238,-215,133,133,133,-227,-229,-230,133,133,-232,133,-228,-231,-233,]),'WHILE':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,237,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,134,-84,-217,134,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,134,-218,-220,134,134,-226,320,-235,-236,-237,-214,134,-216,-234,-238,-215,134,134,134,-227,-229,-230,134,134,-232,134,-228,-231,-233,]),'DO':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,135,-84,-217,135,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,135,-218,-220,135,135,-226,-235,-236,-237,-214,135,-216,-234,-238,-215,135,135,135,-227,-229,-230,135,135,-232,135,-228,-231,-233,]),'FOR':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,136,-84,-217,136,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,136,-218,-220,136,136,-226,-235,-236,-237,-214,136,-216,-234,-238,-215,136,136,136,-227,-229,-230,136,136,-232,136,-228,-231,-233,]),'GOTO':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,137,-84,-217,137,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,137,-218,-220,137,137,-226,-235,-236,-237,-214,137,-216,-234,-238,-215,137,137,137,-227,-229,-230,137,137,-232,137,-228,-231,-233,]),'CONTINUE':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,138,-84,-217,138,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,138,-218,-220,138,138,-226,-235,-236,-237,-214,138,-216,-234,-238,-215,138,138,138,-227,-229,-230,138,138,-232,138,-228,-231,-233,]),'BREAK':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,139,-84,-217,139,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,139,-218,-220,139,139,-226,-235,-236,-237,-214,139,-216,-234,-238,-215,139,139,139,-227,-229,-230,139,139,-232,139,-228,-231,-233,]),'RETURN':([40,61,62,116,117,118,119,120,121,122,123,124,125,126,127,135,226,227,228,231,232,240,241,242,313,314,315,323,324,359,360,361,362,383,384,385,387,395,397,398,400,401,402,],[-83,140,-84,-217,140,-219,-221,-222,-225,-208,-209,-210,-211,-212,-213,140,-218,-220,140,140,-226,-235,-236,-237,-214,140,-216,-234,-238,-215,140,140,140,-227,-229,-230,140,140,-232,140,-228,-231,-233,]),'.':([86,90,98,99,107,108,128,174,175,196,197,273,276,278,283,286,287,292,349,351,352,357,393,394,399,],[177,194,-11,-7,-8,-9,-7,177,-204,-17,-18,177,-205,-207,-13,-15,-16,-10,-206,-12,-14,177,-19,177,-20,]),'/':([88,90,94,98,99,107,108,115,128,196,197,198,200,201,202,204,283,286,287,292,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,224,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,224,224,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'%':([88,90,94,98,99,107,108,115,128,196,197,198,200,201,202,204,283,286,287,292,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,225,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,225,225,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'LEFT_OP':([88,90,94,98,99,107,108,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,219,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,219,219,219,219,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'RIGHT_OP':([88,90,94,98,99,107,108,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,220,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,220,220,220,220,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'<':([88,90,94,98,99,107,108,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,215,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,215,215,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'>':([88,90,94,98,99,107,108,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,216,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,216,216,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'LE_OP':([88,90,94,98,99,107,108,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,217,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,217,217,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'GE_OP':([88,90,94,98,99,107,108,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,218,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,218,218,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'EQ_OP':([88,90,94,98,99,107,108,111,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,213,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,213,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'NE_OP':([88,90,94,98,99,107,108,111,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,214,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,214,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'^':([88,90,94,98,99,107,108,109,110,111,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,-8,-9,211,-57,-55,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,211,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'|':([88,90,94,98,99,106,107,108,109,110,111,112,113,114,115,128,196,197,198,200,201,202,204,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,-11,-7,210,-8,-9,-59,-57,-55,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,210,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'AND_OP':([88,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,128,196,197,198,200,201,202,204,281,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,-23,-37,209,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,209,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'?':([88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,128,196,197,198,200,201,202,204,281,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,190,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-64,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'OR_OP':([88,89,90,94,97,98,99,106,107,108,109,110,111,112,113,114,115,128,196,197,198,200,201,202,204,281,283,286,287,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,351,352,356,358,393,399,],[-35,191,-23,-37,-63,-11,-7,-61,-8,-9,-59,-57,-55,-52,-47,-44,-41,-7,-17,-18,-24,-25,-26,-35,-27,-64,-13,-15,-16,-10,-62,-60,-58,-56,-53,-54,-48,-49,-50,-51,-45,-46,-42,-43,-38,-39,-40,-12,-14,-28,-36,-19,-20,]),'MUL_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[180,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'DIV_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[181,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'MOD_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[182,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'ADD_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[183,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'SUB_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[184,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'LEFT_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[185,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'RIGHT_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[186,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'AND_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[187,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'XOR_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[188,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'OR_ASSIGN':([88,90,98,99,107,108,128,196,197,198,200,201,202,204,283,286,287,292,351,352,356,358,393,399,],[189,-23,-11,-7,-8,-9,-7,-17,-18,-24,-25,-26,-35,-27,-13,-15,-16,-10,-12,-14,-28,-36,-19,-20,]),'PTR_OP':([90,98,99,107,108,128,196,197,283,286,287,292,351,352,393,399,],[195,-11,-7,-8,-9,-7,-17,-18,-13,-15,-16,-10,-12,-14,-19,-20,]),'ELSE':([116,121,122,123,124,125,126,127,226,232,240,241,242,313,315,323,324,359,383,384,385,397,400,401,402,],[-217,-225,-208,-209,-210,-211,-212,-213,-218,-226,-235,-236,-237,-214,-216,-234,-238,-215,395,-229,-230,-232,-228,-231,-233,]),'ELLIPSIS':([255,],[331,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,38,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,39,57,61,117,238,],[4,4,60,83,119,119,322,]),'declaration_specifiers':([0,1,6,7,8,9,39,57,61,65,117,238,255,260,295,335,],[5,5,48,49,50,51,56,56,56,154,56,56,154,154,154,154,]),'storage_class_specifier':([0,1,6,7,8,9,39,57,61,65,117,238,255,260,295,335,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'type_specifier':([0,1,6,7,8,9,39,52,57,61,65,71,74,75,76,96,117,166,199,203,205,238,255,260,295,335,],[7,7,7,7,7,7,7,74,7,7,7,74,74,74,74,74,7,74,74,74,74,7,7,7,7,7,]),'type_qualifier':([0,1,6,7,8,9,39,47,52,57,61,64,65,69,71,74,75,76,96,117,144,146,166,199,203,205,238,250,255,260,261,295,335,341,],[8,8,8,8,8,8,8,70,75,8,8,70,8,157,75,75,75,75,75,8,157,70,75,75,75,75,8,157,8,8,70,8,8,157,]),'function_specifier':([0,1,6,7,8,9,39,57,61,65,117,238,255,260,295,335,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'struct_or_union_specifier':([0,1,6,7,8,9,39,52,57,61,65,71,74,75,76,96,117,166,199,203,205,238,255,260,295,335,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'enum_specifier':([0,1,6,7,8,9,39,52,57,61,65,71,74,75,76,96,117,166,199,203,205,238,255,260,295,335,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'struct_or_union':([0,1,6,7,8,9,39,52,57,61,65,71,74,75,76,96,117,166,199,203,205,238,255,260,295,335,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'declarator':([5,46,56,63,73,154,260,263,],[39,67,81,81,162,256,67,162,]),'init_declarator_list':([5,56,],[41,41,]),'direct_declarator':([5,43,46,56,63,73,154,258,260,263,],[42,66,42,42,42,42,42,66,42,42,]),'pointer':([5,46,47,56,63,69,73,154,208,260,263,295,],[43,43,68,43,43,156,43,258,294,258,43,294,]),'init_declarator':([5,56,63,],[44,44,142,]),'declaration_list':([39,],[57,]),'compound_statement':([39,57,61,117,135,228,231,314,360,361,362,387,395,398,],[58,82,123,123,123,123,123,123,123,123,123,123,123,123,]),'type_qualifier_list':([47,64,146,261,],[69,144,250,341,]),'struct_declaration_list':([52,76,],[71,166,]),'struct_declaration':([52,71,76,166,],[72,159,72,159,]),'specifier_qualifier_list':([52,71,74,75,76,96,166,199,203,205,],[73,73,164,165,73,208,73,208,208,208,]),'enumerator_list':([54,80,],[77,170,]),'enumerator':([54,80,168,271,],[78,78,268,268,]),'initializer':([59,86,173,273,348,357,394,],[84,172,274,347,379,172,347,]),'assignment_expression':([59,61,64,86,96,117,135,140,144,146,173,178,190,192,193,199,203,205,228,231,233,234,235,236,238,246,250,261,273,314,321,322,334,341,348,353,357,360,361,362,363,365,387,394,395,398,],[85,141,145,85,141,141,141,141,245,249,85,279,141,141,285,141,141,141,141,141,316,141,141,141,141,326,329,340,85,141,141,141,369,377,85,381,85,141,141,141,141,141,141,85,141,141,]),'conditional_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,192,193,199,203,205,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[87,87,87,87,87,87,230,87,87,87,87,230,230,87,230,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,230,87,87,87,87,87,87,87,380,87,87,87,87,87,87,87,87,87,87,87,]),'unary_expression':([59,61,64,86,91,92,93,95,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,231,233,234,235,236,238,246,250,261,264,273,291,314,321,322,334,341,348,350,353,355,357,360,361,362,363,365,387,394,395,398,],[88,88,88,88,198,200,202,204,88,88,202,88,88,88,88,202,202,88,202,88,88,202,88,88,88,88,88,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,88,88,88,88,88,88,88,88,88,88,202,88,202,88,88,88,88,88,88,202,88,202,88,88,88,88,88,88,88,88,88,88,]),'logical_or_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,192,193,199,203,205,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'postfix_expression':([59,61,64,86,91,92,93,95,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,231,233,234,235,236,238,246,250,261,264,273,291,314,321,322,334,341,348,350,353,355,357,360,361,362,363,365,387,394,395,398,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'unary_operator':([59,61,64,86,91,92,93,95,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,231,233,234,235,236,238,246,250,261,264,273,291,314,321,322,334,341,348,350,353,355,357,360,361,362,363,365,387,394,395,398,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'cast_expression':([59,61,64,86,93,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,231,233,234,235,236,238,246,250,261,264,273,291,314,321,322,334,341,348,350,353,355,357,360,361,362,363,365,387,394,395,398,],[94,94,94,94,201,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,310,311,312,94,94,94,94,94,94,94,94,94,94,94,94,358,94,94,94,94,94,94,94,94,358,94,94,94,94,94,94,94,94,94,94,]),'logical_and_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,281,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'primary_expression':([59,61,64,86,91,92,93,95,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,231,233,234,235,236,238,246,250,261,264,273,291,314,321,322,334,341,348,350,353,355,357,360,361,362,363,365,387,394,395,398,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'inclusive_or_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,296,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'exclusive_or_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,297,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'and_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,298,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'equality_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,299,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'relational_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,300,301,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'shift_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,302,303,304,305,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'additive_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,306,307,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'multiplicative_expression':([59,61,64,86,96,117,129,135,140,144,146,163,169,173,176,178,190,191,192,193,199,203,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,231,233,234,235,236,238,246,250,261,264,273,314,321,322,334,341,348,350,353,357,360,361,362,363,365,387,394,395,398,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,308,309,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'block_item_list':([61,],[117,]),'block_item':([61,117,],[118,227,]),'statement':([61,117,135,228,231,314,360,361,362,387,395,398,],[120,120,237,313,315,359,383,384,385,397,400,402,]),'labeled_statement':([61,117,135,228,231,314,360,361,362,387,395,398,],[122,122,122,122,122,122,122,122,122,122,122,122,]),'expression_statement':([61,117,135,228,231,238,314,321,322,360,361,362,365,387,395,398,],[124,124,124,124,124,321,124,364,365,124,124,124,388,124,124,124,]),'selection_statement':([61,117,135,228,231,314,360,361,362,387,395,398,],[125,125,125,125,125,125,125,125,125,125,125,125,]),'iteration_statement':([61,117,135,228,231,314,360,361,362,387,395,398,],[126,126,126,126,126,126,126,126,126,126,126,126,]),'jump_statement':([61,117,135,228,231,314,360,361,362,387,395,398,],[127,127,127,127,127,127,127,127,127,127,127,127,]),'expression':([61,96,117,135,140,190,192,199,203,205,228,231,234,235,236,238,314,321,322,360,361,362,363,365,387,395,398,],[131,207,131,131,243,280,282,207,207,207,131,131,317,318,319,131,131,131,131,131,131,131,386,131,131,131,131,]),'parameter_type_list':([65,260,295,335,],[149,338,338,372,]),'identifier_list':([65,],[150,]),'parameter_list':([65,260,295,335,],[151,151,151,151,]),'parameter_declaration':([65,255,260,295,335,],[153,332,153,153,153,]),'struct_declarator_list':([73,],[160,]),'struct_declarator':([73,263,],[161,343,]),'initializer_list':([86,357,],[171,382,]),'designation':([86,273,357,394,],[173,348,173,348,]),'designator_list':([86,273,357,394,],[174,174,174,174,]),'designator':([86,174,273,357,394,],[175,276,175,175,175,]),'assignment_operator':([88,],[178,]),'type_name':([96,199,203,205,],[206,288,289,290,]),'constant_expression':([129,163,169,176,264,],[229,265,269,277,344,]),'abstract_declarator':([154,208,260,295,],[257,293,337,337,]),'direct_abstract_declarator':([154,208,258,260,294,295,],[259,259,333,259,333,259,]),'argument_expression_list':([193,],[284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser_99.py',33),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser_99.py',34),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser_99.py',44),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser_99.py',45),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser_99.py',50),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser_99.py',51),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser_99.py',56),
  ('primary_expression -> CONSTANT','primary_expression',1,'p_primary_expression','parser_99.py',57),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser_99.py',58),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','parser_99.py',59),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser_99.py',67),
  ('postfix_expression -> postfix_expression [ expression ]','postfix_expression',4,'p_postfix_expression','parser_99.py',68),
  ('postfix_expression -> postfix_expression ( )','postfix_expression',3,'p_postfix_expression','parser_99.py',69),
  ('postfix_expression -> postfix_expression ( argument_expression_list )','postfix_expression',4,'p_postfix_expression','parser_99.py',70),
  ('postfix_expression -> postfix_expression . IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser_99.py',71),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser_99.py',72),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','parser_99.py',73),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','parser_99.py',74),
  ('postfix_expression -> ( type_name ) { initializer_list }','postfix_expression',6,'p_postfix_expression','parser_99.py',75),
  ('postfix_expression -> ( type_name ) { initializer_list , }','postfix_expression',7,'p_postfix_expression','parser_99.py',76),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser_99.py',85),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser_99.py',86),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser_99.py',95),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','parser_99.py',96),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','parser_99.py',97),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser_99.py',98),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser_99.py',99),
  ('unary_expression -> SIZEOF ( type_name )','unary_expression',4,'p_unary_expression','parser_99.py',100),
  ('unary_operator -> &','unary_operator',1,'p_unary_operator','parser_99.py',109),
  ('unary_operator -> *','unary_operator',1,'p_unary_operator','parser_99.py',110),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator','parser_99.py',111),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator','parser_99.py',112),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator','parser_99.py',113),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator','parser_99.py',114),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser_99.py',119),
  ('cast_expression -> ( type_name ) cast_expression','cast_expression',4,'p_cast_expression','parser_99.py',120),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser_99.py',129),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser_99.py',130),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser_99.py',131),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser_99.py',132),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser_99.py',145),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','parser_99.py',146),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','parser_99.py',147),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser_99.py',158),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','parser_99.py',159),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','parser_99.py',160),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser_99.py',171),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression','parser_99.py',172),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression','parser_99.py',173),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','parser_99.py',174),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','parser_99.py',175),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser_99.py',190),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','parser_99.py',191),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','parser_99.py',192),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser_99.py',203),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression','parser_99.py',204),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser_99.py',212),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser_99.py',213),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser_99.py',221),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser_99.py',222),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser_99.py',230),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser_99.py',231),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser_99.py',239),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser_99.py',240),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser_99.py',248),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression','parser_99.py',249),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser_99.py',257),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser_99.py',258),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','parser_99.py',267),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',268),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',269),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',270),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',271),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',272),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',273),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',274),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',275),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',276),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser_99.py',277),
  ('expression -> assignment_expression','expression',1,'p_expression','parser_99.py',282),
  ('expression -> expression , assignment_expression','expression',3,'p_expression','parser_99.py',283),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser_99.py',292),
  ('declaration -> declaration_specifiers ;','declaration',2,'p_declaration','parser_99.py',297),
  ('declaration -> declaration_specifiers init_declarator_list ;','declaration',3,'p_declaration','parser_99.py',298),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser_99.py',317),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser_99.py',318),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser_99.py',319),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser_99.py',320),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser_99.py',321),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser_99.py',322),
  ('declaration_specifiers -> function_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser_99.py',323),
  ('declaration_specifiers -> function_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser_99.py',324),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser_99.py',335),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list','parser_99.py',336),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser_99.py',345),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator','parser_99.py',346),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser_99.py',354),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser_99.py',355),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser_99.py',356),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser_99.py',357),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser_99.py',358),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser_99.py',363),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser_99.py',364),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser_99.py',365),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser_99.py',366),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser_99.py',367),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser_99.py',368),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser_99.py',369),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser_99.py',370),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser_99.py',371),
  ('type_specifier -> BOOLEAN','type_specifier',1,'p_type_specifier','parser_99.py',372),
  ('type_specifier -> COMPLEX','type_specifier',1,'p_type_specifier','parser_99.py',373),
  ('type_specifier -> IMAGINARY','type_specifier',1,'p_type_specifier','parser_99.py',374),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser_99.py',375),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser_99.py',376),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier','parser_99.py',377),
  ('struct_or_union_specifier -> struct_or_union { struct_declaration_list }','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser_99.py',382),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER { struct_declaration_list }','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser_99.py',383),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser_99.py',384),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser_99.py',411),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser_99.py',412),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser_99.py',417),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser_99.py',418),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list ;','struct_declaration',3,'p_struct_declaration','parser_99.py',427),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser_99.py',432),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser_99.py',433),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser_99.py',434),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser_99.py',435),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser_99.py',444),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser_99.py',445),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser_99.py',454),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator','parser_99.py',455),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator','parser_99.py',456),
  ('enum_specifier -> ENUM { enumerator_list }','enum_specifier',4,'p_enum_specifier','parser_99.py',466),
  ('enum_specifier -> ENUM { enumerator_list , }','enum_specifier',5,'p_enum_specifier','parser_99.py',467),
  ('enum_specifier -> ENUM IDENTIFIER { enumerator_list }','enum_specifier',5,'p_enum_specifier2','parser_99.py',473),
  ('enum_specifier -> ENUM IDENTIFIER { enumerator_list , }','enum_specifier',6,'p_enum_specifier2','parser_99.py',474),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier3','parser_99.py',490),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser_99.py',498),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list','parser_99.py',499),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','parser_99.py',508),
  ('enumerator -> IDENTIFIER = constant_expression','enumerator',3,'p_enumerator','parser_99.py',509),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','parser_99.py',522),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser_99.py',527),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','parser_99.py',528),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser_99.py',529),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser_99.py',534),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser_99.py',535),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator1','parser_99.py',544),
  ('direct_declarator -> ( declarator )','direct_declarator',3,'p_direct_declarator2','parser_99.py',549),
  ('direct_declarator -> direct_declarator [ ]','direct_declarator',3,'p_direct_declarator3','parser_99.py',554),
  ('direct_declarator -> direct_declarator [ type_qualifier_list ]','direct_declarator',4,'p_direct_declarator3','parser_99.py',555),
  ('direct_declarator -> direct_declarator [ assignment_expression ]','direct_declarator',4,'p_direct_declarator4','parser_99.py',561),
  ('direct_declarator -> direct_declarator [ type_qualifier_list assignment_expression ]','direct_declarator',5,'p_direct_declarator4','parser_99.py',562),
  ('direct_declarator -> direct_declarator [ STATIC assignment_expression ]','direct_declarator',5,'p_direct_declarator5','parser_99.py',569),
  ('direct_declarator -> direct_declarator [ STATIC type_qualifier_list assignment_expression ]','direct_declarator',6,'p_direct_declarator5','parser_99.py',570),
  ('direct_declarator -> direct_declarator [ type_qualifier_list STATIC assignment_expression ]','direct_declarator',6,'p_direct_declarator5','parser_99.py',571),
  ('direct_declarator -> direct_declarator [ * ]','direct_declarator',4,'p_direct_declarator6','parser_99.py',588),
  ('direct_declarator -> direct_declarator [ type_qualifier_list * ]','direct_declarator',5,'p_direct_declarator6','parser_99.py',589),
  ('direct_declarator -> direct_declarator ( )','direct_declarator',3,'p_direct_declarator7','parser_99.py',595),
  ('direct_declarator -> direct_declarator ( parameter_type_list )','direct_declarator',4,'p_direct_declarator7','parser_99.py',596),
  ('direct_declarator -> direct_declarator ( identifier_list )','direct_declarator',4,'p_direct_declarator7','parser_99.py',597),
  ('pointer -> *','pointer',1,'p_pointer1','parser_99.py',603),
  ('pointer -> * pointer','pointer',2,'p_pointer1','parser_99.py',604),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer2','parser_99.py',609),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer2','parser_99.py',610),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser_99.py',615),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser_99.py',616),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser_99.py',625),
  ('parameter_type_list -> parameter_list , ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser_99.py',626),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser_99.py',635),
  ('parameter_list -> parameter_list , parameter_declaration','parameter_list',3,'p_parameter_list','parser_99.py',636),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser_99.py',645),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser_99.py',646),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser_99.py',647),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser_99.py',652),
  ('identifier_list -> identifier_list , IDENTIFIER','identifier_list',3,'p_identifier_list','parser_99.py',653),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser_99.py',662),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser_99.py',663),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser_99.py',671),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser_99.py',672),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser_99.py',673),
  ('direct_abstract_declarator -> ( abstract_declarator )','direct_abstract_declarator',3,'p_direct_abstract_declarator1','parser_99.py',678),
  ('direct_abstract_declarator -> direct_abstract_declarator [ ]','direct_abstract_declarator',3,'p_direct_abstract_declarator2','parser_99.py',683),
  ('direct_abstract_declarator -> direct_abstract_declarator [ assignment_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator2','parser_99.py',684),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator3','parser_99.py',689),
  ('direct_abstract_declarator -> [ assignment_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator3','parser_99.py',690),
  ('direct_abstract_declarator -> [ type_qualifier_list ]','direct_abstract_declarator',3,'p_direct_abstract_declarator3','parser_99.py',691),
  ('direct_abstract_declarator -> [ type_qualifier_list assignment_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator3','parser_99.py',692),
  ('direct_abstract_declarator -> direct_abstract_declarator [ * ]','direct_abstract_declarator',4,'p_direct_abstract_declarator4','parser_99.py',698),
  ('direct_abstract_declarator -> [ * ]','direct_abstract_declarator',3,'p_direct_abstract_declarator5','parser_99.py',704),
  ('direct_abstract_declarator -> direct_abstract_declarator ( )','direct_abstract_declarator',3,'p_direct_abstract_declarator6','parser_99.py',710),
  ('direct_abstract_declarator -> direct_abstract_declarator ( parameter_type_list )','direct_abstract_declarator',4,'p_direct_abstract_declarator6','parser_99.py',711),
  ('direct_abstract_declarator -> ( )','direct_abstract_declarator',2,'p_direct_abstract_declarator7','parser_99.py',717),
  ('direct_abstract_declarator -> ( parameter_type_list )','direct_abstract_declarator',3,'p_direct_abstract_declarator7','parser_99.py',718),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser_99.py',724),
  ('initializer -> { initializer_list }','initializer',3,'p_initializer2','parser_99.py',729),
  ('initializer -> { initializer_list , }','initializer',4,'p_initializer2','parser_99.py',730),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser_99.py',735),
  ('initializer_list -> designation initializer','initializer_list',2,'p_initializer_list','parser_99.py',736),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list','parser_99.py',737),
  ('initializer_list -> initializer_list , designation initializer','initializer_list',4,'p_initializer_list','parser_99.py',738),
  ('designation -> designator_list =','designation',2,'p_designation','parser_99.py',747),
  ('designator_list -> designator','designator_list',1,'p_designator_list','parser_99.py',752),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','parser_99.py',753),
  ('designator -> [ constant_expression ]','designator',3,'p_designator','parser_99.py',762),
  ('designator -> . IDENTIFIER','designator',2,'p_designator','parser_99.py',763),
  ('statement -> labeled_statement','statement',1,'p_statement','parser_99.py',768),
  ('statement -> compound_statement','statement',1,'p_statement','parser_99.py',769),
  ('statement -> expression_statement','statement',1,'p_statement','parser_99.py',770),
  ('statement -> selection_statement','statement',1,'p_statement','parser_99.py',771),
  ('statement -> iteration_statement','statement',1,'p_statement','parser_99.py',772),
  ('statement -> jump_statement','statement',1,'p_statement','parser_99.py',773),
  ('labeled_statement -> IDENTIFIER : statement','labeled_statement',3,'p_labeled_statement','parser_99.py',778),
  ('labeled_statement -> CASE constant_expression : statement','labeled_statement',4,'p_labeled_statement','parser_99.py',779),
  ('labeled_statement -> DEFAULT : statement','labeled_statement',3,'p_labeled_statement','parser_99.py',780),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','parser_99.py',785),
  ('compound_statement -> { block_item_list }','compound_statement',3,'p_compound_statement','parser_99.py',786),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','parser_99.py',791),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','parser_99.py',792),
  ('block_item -> declaration','block_item',1,'p_block_item','parser_99.py',801),
  ('block_item -> statement','block_item',1,'p_block_item','parser_99.py',802),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser_99.py',807),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser_99.py',808),
  ('expression_statement -> ;','expression_statement',1,'p_expression_statement','parser_99.py',817),
  ('expression_statement -> expression ;','expression_statement',2,'p_expression_statement','parser_99.py',818),
  ('selection_statement -> IF ( expression ) statement','selection_statement',5,'p_selection_statement','parser_99.py',823),
  ('selection_statement -> IF ( expression ) statement ELSE statement','selection_statement',7,'p_selection_statement','parser_99.py',824),
  ('selection_statement -> SWITCH ( expression ) statement','selection_statement',5,'p_selection_statement','parser_99.py',825),
  ('iteration_statement -> WHILE ( expression ) statement','iteration_statement',5,'p_iteration_statement','parser_99.py',830),
  ('iteration_statement -> DO statement WHILE ( expression ) ;','iteration_statement',7,'p_iteration_statement','parser_99.py',831),
  ('iteration_statement -> FOR ( expression_statement expression_statement ) statement','iteration_statement',6,'p_iteration_statement','parser_99.py',832),
  ('iteration_statement -> FOR ( declaration expression_statement expression_statement ) statement','iteration_statement',7,'p_iteration_statement','parser_99.py',833),
  ('jump_statement -> GOTO IDENTIFIER ;','jump_statement',3,'p_jump_statement','parser_99.py',838),
  ('jump_statement -> CONTINUE ;','jump_statement',2,'p_jump_statement','parser_99.py',839),
  ('jump_statement -> BREAK ;','jump_statement',2,'p_jump_statement','parser_99.py',840),
  ('jump_statement -> RETURN ;','jump_statement',2,'p_jump_statement','parser_99.py',841),
  ('jump_statement -> RETURN expression ;','jump_statement',3,'p_jump_statement','parser_99.py',842),
]
